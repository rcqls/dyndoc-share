[#require]RCqls/DynEditor
Tools/Web/Html
[#main][#<]{#def]mdOut[#,]key[][#md>]
#{code_#{key}}
[#def}

{#def]rmdOut[#,]key[][#,]prefix[][#,]iframe_size[width="1024" height="800"]
[#>>]:{$editor_cfg.tmp_dir}/#{key}.Rmd[#{code_#{key}}]
[#=]output_file[:{$editor_cfg.root}/#{prefix}/#{key}.html]
[#rb<]FileUtils.mkdir_p(File.dirname(#{=output_file}))
p [:rmdOut,$editor_cfg.tmp_dir}+"/#{key}.Rmd",#{=output_file}]
[#R<]rmarkdown::render(":{$editor_cfg.tmp_dir}/#{key}.Rmd",output_file=#{=output_file})
[#>]<iframe src="/#{prefix}/#{key}.html" #{iframe_size}></iframe>
[#def}

{#def]mdSrc[#,]key[][#,]uv_theme[solarized]
[#%]Needs || after atom since the last | is not considered!
[#>]{#uv]#{code_#{key}}[#syntax]text.html.markdown.multimarkdown[#render]#{uv_theme}[#}
[#def}

{#def]Rmd[#,]file[]
[#,]title[RMarkdown demo]
[#,]uv_theme[solarized]
[#,]css[]
[#,]header[
---
title: ":{#{=title}.strip}"
date: "`r Sys.Date()`"
output:
  rmdformats::readthedown:
  self_contained: true
  thumbnails: true
  lightbox: true
  gallery: false
  highlight: tango
---
]
[#,]options[
```{r knitr_init, echo=FALSE, cache=FALSE}
library(knitr)
library(rmdformats)

## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
	             cache=TRUE,
               prompt=FALSE,
               tidy=TRUE,
               comment=NA,
               message=FALSE,
               warning=FALSE)
opts_knit$set(width=75)
```
]
[#=]content[{#blck][#yield]default[#blck}]
[#=]rmd_content[
#{header}
#{options}
{#if]#{+?uv_theme}[#>]<style type="text/css">@import url("/tools/uv/#{uv_theme}.css");</style>[#if}
{#if]#{+?css}[#rb>]
#{=css}.strip.split(",").each do |css| #
{#>]<style type="text/css">@import url(":{css.strip}");</style>[#nl][#>}
end
[#if}
#{content}
]
[#=]rmd_file[:{$editor_cfg.tmp_dir}/#{file}.Rmd]
[#=]html_file_cache[:{File.join($editor_cfg.root,"#{file}.html.cache")}]
[#rb>]public_dir[File.dirname(#{=html_file_cache})]
[#rb<]FileUtils.mkdir_p(File.dirname(#{=rmd_file}))
FileUtils.mkdir_p(File.dirname(#{=html_file_cache}))
p [:rmd,#{=rmd_file},#{=html_file},#{=html_file_cache}]
[#>>]#{rmd_file}[#{rmd_content}]
[#R<]rmarkdown::render(#{=rmd_file},output_file=#{=html_file_cache})
[#def}

{#def]readthedown[#,]file[]
[#>]{#Rmd][#header][
---
title: "RMarkdown demo"
date: "`r Sys.Date()`"
output:
  rmdformats::readthedown:
  self_contained: true
  thumbnails: true
  lightbox: true
  gallery: false
  highlight: tango
---
]
[#options][
```{r knitr_init, echo=FALSE, cache=FALSE}
library(knitr)
library(rmdformats)

## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
	             cache=TRUE,
               prompt=FALSE,
               tidy=TRUE,
               comment=NA,
               message=FALSE,
               warning=FALSE)
opts_knit$set(width=75)
```
][#>]{#blck][#yield]default[#blck}[#Rmd}
[#def}

{#def]maketoc[#,]html[#rb<]

toc,subtoc=[],[]
#{=html}.split("\n").each  do |l| #
  if l =~ /<h(1|2) id\=\"([^\>]*)\"[^\>]*\>(.*)<\/h(1|2)>/
    if $1.to_i==1
      unless subtoc.empty?
        toc[-1][:subtoc]=subtoc
        subtoc=[]
      end
      toc << {key: $2, name: $3}
    else
      subtoc << {key: $2, name: $3}
    end
  end
end


unless subtoc.empty?
  toc[-1][:subtoc]=subtoc
  subtoc=[]
end

res="<ul>\n"
cur_level=0
toc.each do |e| #
    res << "\t"+'<li><a href="#'+e[:key]+'">'+e[:name]+"</a>"
    unless e[:subtoc]
      res << "</li>\n"
    else
      res << "\n\t\t<ul>\n"
      e[:subtoc].each {|e2| res << "\t\t\t"+'<li><a href="#'+e2[:key]+'">'+e2[:name]+"</a></li>\n" }
      res << "\t\t</ul>\n\t</li>\n"
    end
end
res << "</ul>\n"
[#rb>]res
[#def}
