[#md>]
## Dyndoc server started as a daemon

* on MacOSX, `launchctl`:
    * `gem install dyn-ruby-launchctl`
    * `dyn-daemon srv new` (create the service and load it automatically)
    * `dyn-daemon srv start|stop` (start or stop the service)
    * `dyn-daemon srv status` (list the status of the service)
    * `dyn-daemon srv load|unload` (load or unload the service already created)
* on Windows,
    * `gem install dyn-ruby-win32daemon`
    * `dyn-daemon srv start|stop` (start or stop the daemon)
    * `dyn-daemon srv status` (list the status of the daemon)
* on linux, `upstart`:
    * dyn server: adapt the following to your needs (APPUSER and APPDIR)
    ```{bash}
    author "rcqls"
    description "start and stop dyn-srv for Ubuntu (upstart)"
    version "0.1"
    start on started networking
    stop on runlevel [!2345]
    env APPUSER="cqls"
    env APPDIR="/home/cqls/.gem/ruby/2.2.0/bin"
    env APPBIN="dyn-srv"
    respawn
    script
        exec su - $APPUSER -c "$APPDIR/$APPBIN"
    end script
    ```
    * dyntask server: adapt the following to your needs (APPUSER and APPDIR)
    ```{bash}
    author "rcqls"
    description "start and stop dyntask for Ubuntu (upstart)"
    version "0.1"
    start on started networking
    stop on runlevel [!2345]
    env APPUSER="cqls"
    env APPDIR="/home/cqls/.gem/ruby/2.2.0/bin"
    env APPBIN="dyntask-server"
    respawn
    script
        exec su - $APPUSER -c "$APPDIR/$APPBIN"
    end script
    ```
